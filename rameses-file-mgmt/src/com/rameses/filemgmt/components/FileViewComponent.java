/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rameses.filemgmt.components;

import com.rameses.rcp.common.FileViewHandler;
import com.rameses.common.PropertyResolver;
import com.rameses.rcp.control.XComponentPanel;
import com.rameses.rcp.ui.annotations.ComponentBean;

/**
 *
 * @author wflores
 */
@ComponentBean("com.rameses.filemgmt.components.FileViewComponentModel")
public class FileViewComponent extends XComponentPanel {

    private String handler;
    private String fileid;
    
    private FileViewHandler fileViewHandler; 
    private FileViewHandlerProxy proxyHandler;
    
    public FileViewComponent() {
        initComponents();
    }
    
    public String getHandler() { 
        return this.handler; 
    }
    public void setHandler( String handler ) {
        this.handler = handler; 
    }
    
    
    public String getFileid() { return fileid; }
    public void setFileid( String fileid ) {
        this.fileid = fileid; 
    }
    
    public void afterLoad() {
        super.afterLoad();
        
        this.fileViewHandler = null; 
        
        Object caller = getBean();
        Object bean = getComponentBean(); 
        PropertyResolver pr = PropertyResolver.getInstance();
        String shandler = getHandler(); 
        if ( shandler != null && shandler.trim().length()>0 ) {
            Object oval = pr.getProperty(caller, shandler); 
            if ( oval instanceof FileViewHandler ) {
                this.fileViewHandler = (FileViewHandler)oval; 
            } else {
                this.fileViewHandler = new DefaultFileViewHandler(); 
            }
        }
        
        this.proxyHandler = new FileViewHandlerProxy( this.fileViewHandler ); 
        pr.setProperty(bean, "handler", this.proxyHandler );
    }   
    
    public void afterRefresh() {
        super.afterRefresh();
        
        Object caller = getBean();
        Object bean = getComponentBean(); 
        PropertyResolver pr = PropertyResolver.getInstance();
        String fileid = getFileid(); 
        if ( fileid != null && fileid.trim().length()>0) {
            Object oval = pr.getProperty(caller, fileid); 
            pr.setProperty(bean, "fileid", oval );  
            ((IFileViewModel) bean).loadFile(); 
        }
    } 
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        xImageGallery1 = new com.rameses.rcp.control.XImageGallery();
        xPanel3 = new com.rameses.rcp.control.XPanel();
        xImageCanvas1 = new com.rameses.rcp.control.XImageCanvas();
        xLabel1 = new com.rameses.rcp.control.XLabel();

        setLayout(new java.awt.BorderLayout());

        xImageGallery1.setCellSize(new java.awt.Dimension(70, 70));
        xImageGallery1.setHandler("itemHandler");
        xImageGallery1.setName("selectedItem"); // NOI18N
        add(xImageGallery1, java.awt.BorderLayout.LINE_START);

        xPanel3.setDepends(new String[] {"selectedItem"});
        xPanel3.setName("cardname"); // NOI18N
        xPanel3.setLayout(new java.awt.CardLayout());

        com.rameses.rcp.control.border.XLineBorder xLineBorder1 = new com.rameses.rcp.control.border.XLineBorder();
        xLineBorder1.setHideLeft(true);
        xLineBorder1.setLineColor(new java.awt.Color(150, 150, 150));
        xImageCanvas1.setBorder(xLineBorder1);
        xImageCanvas1.setDepends(new String[] {"selectedItem"});
        xImageCanvas1.setName("selectedItem.actualimage"); // NOI18N
        xImageCanvas1.setNoImageBackground(new java.awt.Color(255, 255, 255));
        xPanel3.add(xImageCanvas1, "image");

        xLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        com.rameses.rcp.control.border.XLineBorder xLineBorder2 = new com.rameses.rcp.control.border.XLineBorder();
        xLineBorder2.setHideLeft(true);
        xLineBorder2.setLineColor(new java.awt.Color(150, 150, 150));
        xLabel1.setBorder(xLineBorder2);
        xLabel1.setDepends(new String[] {"selectedItem"});
        xLabel1.setIconResource("com/rameses/rcp/icons/loading32.gif");
        xPanel3.add(xLabel1, "noimage");

        add(xPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.rameses.rcp.control.XImageCanvas xImageCanvas1;
    private com.rameses.rcp.control.XImageGallery xImageGallery1;
    private com.rameses.rcp.control.XLabel xLabel1;
    private com.rameses.rcp.control.XPanel xPanel3;
    // End of variables declaration//GEN-END:variables

    private class DefaultFileViewHandler extends FileViewHandler {
    }
}
